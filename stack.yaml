version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      - POSTGRES_DB=taskdb
    secrets:
      - source: db_user
        target: POSTGRES_USER
      - source: db_password
        target: POSTGRES_PASSWORD
    deploy:
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure

  backend:
    image: alegru90/task-backend:latest
    build: ./backend
    depends_on:
      - postgres
    networks:
      - backend
      - frontend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/taskdb
    secrets:
      - source: db_user
        target: SPRING_DATASOURCE_USERNAME
      - source: db_password
        target: SPRING_DATASOURCE_PASSWORD
    ports:
      - "8082:8080"
    deploy:
      placement:
        constraints: [node.role == worker]
      replicas: 3
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  frontend:
    image: task-frontend
    build: ./frontend
    depends_on:
      - backend
    networks:
      - frontend
    ports:
      - "3000:80"
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  visualizer:
    image: dockersamples/visualizer
    ports:
      - "8080:8080"
    stop_grace_period: 1m30s
    networks:
      - frontend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints: [node.role == worker]

secrets:
  db_user:
    external: true
  db_password:
    external: true

networks:
  frontend:
  backend:

volumes:
  db-data:
